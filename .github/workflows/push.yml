on: [push]
name: Deploy workflow
jobs:
  install:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2.3.4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2.2.0
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2.1.6
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install
        run: yarn
      - name: Lint
        run: yarn lint
      - name: Build
        run: yarn build

      - name: Create Release
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Create Tar Ball
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
        run: tar cJf yacd.tar.xz public
      - name: Upload Release Asset
        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/')
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./yacd.tar.xz
          asset_name: yacd.tar.xz
          asset_content_type: application/x-gzip

      - name: Push to gh-pages
        if: github.event_name == 'push' && (startsWith(github.event.ref, 'refs/tags/') || github.event.ref == 'refs/heads/publish')
        env:
          PUBLISH_DIR: public
          BRANCH: gh-pages
        run: |
          cd $PUBLISH_DIR
          ls -l
          git init
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@noreply.github.com"
          git add .
          git status
          git commit -m "Push to gh-pages"
          git push -f https://$GITHUB_ACTOR:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git HEAD:$BRANCH
